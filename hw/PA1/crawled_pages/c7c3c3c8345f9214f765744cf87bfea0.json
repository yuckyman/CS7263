{
  "url": "http://nlp.stanford.edu/IR-book/html/htmledition/boolean-retrieval-2.html",
  "title": "Boolean retrieval",
  "body": "\n\n\n\n\nBoolean retrieval\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Next: Wildcard queries\n Up: Vector space scoring and\n Previous: Vector space scoring and\n    Contents \n    Index\n\n\n\n\nBoolean retrieval\n\nClearly a vector space index can be used to answer Boolean queries, as long as the weight of a term  in the document vector for  is non-zero whenever  occurs in . The reverse is not true, since a Boolean index does not by default maintain term weight information.  There is no easy way of combining vector space and Boolean queries from a user's standpoint: vector space queries are fundamentally a form of evidence accumulation, where the presence of more query terms in a document adds to the score of a document. Boolean retrieval on the other hand, requires a user to specify a formula for selecting documents through the presence (or absence) of specific combinations of keywords, without inducing any relative ordering among them. Mathematically, it is in fact possible to invoke so-called -norms to combine Boolean and vector space queries, but we know of no system that makes use of this fact.\n\n\n\n\n© 2008 Cambridge University PressThis is an automatically generated page. In case of formatting errors you may want to look at the PDF edition of the book.\n2009-04-07\n\n\n\n"
}