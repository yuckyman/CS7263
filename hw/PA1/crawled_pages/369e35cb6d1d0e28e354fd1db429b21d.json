{
  "url": "http://nlp.stanford.edu/IR-book/html/htmledition/exercises-1.html",
  "title": "Exercises",
  "body": "\n\n\n\n\nExercises\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Next: Probabilistic information retrieval\n Up: XML retrieval\n Previous: References and further reading\n    Contents \n    Index\n\n\n\n\nExercises\n\n\nExercises.\n\n Find a reasonably sized\nXML document collection (or a collection using a markup\nlanguage different from XML like HTML) on the web and download\nit. \nJon Bosak's XML edition of Shakespeare and of various\nreligious works at \nhttp://www.ibiblio.org/bosak/ \nor\nthe first 10,000 documents of the Wikipedia are good\nchoices. Create three CAS topics of the type shown in\nFigure 10.3  that you would expect to do better than\nanalogous CO topics. Explain why an XML retrieval\nsystem would be able to exploit the XML structure of the\ndocuments to achieve better\nretrieval results on the topics than an unstructured retrieval system.\n\n\n\nFor the collection and the\ntopics in Exercise 10.7 , (i) are there pairs of\nelements  and , with  a subelement of  such that both answer one of the\ntopics?\nFind one case each where (ii)  (iii)  is the better\nanswer to the query.\n\n\n\nImplement the (i) SIMMERGE (ii) SIMNOMERGE algorithm in\nSection 10.3  and run it for the collection and the\ntopics in Exercise 10.7 . (iii) Evaluate the results\nby assigning binary relevance judgments to the first five\ndocuments of the three retrieved lists for each algorithm. Which algorithm\nperforms better?\n\n\n\nAre all of the elements in Exercise 10.7 \nappropriate to be returned as hits to a user or are there\nelements (as in the example\n<b>definitely</b> on page 10.2 ) that you would exclude?\n\n\n\n  \nWe discussed the tradeoff between accuracy of results and\ndimensionality of the vector space on page 10.3 .\nGive an example of an information need that we can answer correctly if we\nindex all lexicalized subtrees, but cannot answer if we only\nindex structural terms.\n\n\n\nIf we index all structural terms,\nwhat is the size of the index as a function of text size?\n\n\n\nIf we index all lexicalized subtrees,\nwhat is the size of the index as a function of text size?\n\n\n\n Give an example of a query-document pair for which\n\n is larger than 1.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Next: Probabilistic information retrieval\n Up: XML retrieval\n Previous: References and further reading\n    Contents \n    Index\n\n\n© 2008 Cambridge University PressThis is an automatically generated page. In case of formatting errors you may want to look at the PDF edition of the book.\n2009-04-07\n\n\n\n"
}