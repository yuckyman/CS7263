{
  "url": "http://nlp.stanford.edu/IR-book/html/htmledition/topic-specific-pagerank-1.html",
  "title": "Topic-specific PageRank",
  "body": "\n\n\n\n\nTopic-specific PageRank\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Next: Hubs and Authorities\n Up: PageRank\n Previous: The PageRank computation\n    Contents \n    Index\n\n\n\n\n \n\nTopic-specific PageRank\n \nThus far we have discussed the PageRank computation with a teleport operation in which the surfer jumps to a random web page chosen uniformly at random. We now consider teleporting to a random web page chosen non-uniformly. In doing so, we are able to derive PageRank values tailored to particular interests.  For instance, a sports aficionado might wish that pages on sports be ranked higher than non-sports pages. Suppose that web pages on sports are ``near'' one another in the web graph. Then, a random surfer who frequently finds himself on random sports pages is likely (in the course of the random walk) to spend most of his time at sports pages, so that the steady-state distribution of sports pages is boosted.\n\n\nSuppose our random surfer, endowed with a teleport operation as before, teleports to a random web page on the topic of sports instead of teleporting to a uniformly chosen random web page. We will not focus on how we collect all web pages on the topic of sports; in fact, we only need a non-zero subset  of sports-related web pages, so that the teleport operation is feasible. This may be obtained, for instance, from a manually built directory of sports pages such as the open directory project (http://www.dmoz.org/) or that of Yahoo.\n\n\nProvided the set  of sports-related pages is non-empty, it follows that there is a non-empty set of web pages  over which the random walk has a steady-state distribution; let us denote this sports PageRank distribution by . For web pages not in , we set the PageRank values to zero. We call  the  topic-specific PageRank  for sports.\n\n\n\n\nTopic-specific PageRank.In this example we consider a user whose interests are 60% sports and 40% politics.  If the teleportation probability is 10%, this user is modeled as teleporting 6% to sports pages and 4% to politics pages.\n\n\n\nWe do not demand that teleporting takes the random surfer to a uniformly chosen sports page; the distribution over teleporting targets  could in fact be arbitrary.\n\n\nIn like manner we can envision topic-specific PageRank\ndistributions for each of several topics such as science,\nreligion, politics and so on. Each of these distributions\nassigns to each web page a PageRank value in the interval\n. For a user interested in only a single topic from\namong these topics, we may invoke the corresponding PageRank\ndistribution when scoring and ranking search results. This\ngives us the potential of considering settings in which the\nsearch engine knows what topic a user is interested\nin. This may happen because users either explicitly register\ntheir interests, or because the system learns by observing\neach user's behavior over time.\n\n\nBut what if a user is known to have a mixture of interests from multiple topics? For instance, a user may have an interest mixture (or profile) that is 60% sports and 40% politics; can we compute a  personalized PageRank  for this user? At first glance, this appears daunting: how could we possibly compute a different PageRank distribution for each user profile (with, potentially, infinitely many possible profiles)? We can in fact address this provided we assume that an individual's interests can be well-approximated as a linear combination of a small number of topic page distributions.  A user with this mixture of interests could teleport as follows: determine first whether to teleport to the set  of known sports pages, or to the set of known politics pages. This choice is made at random, choosing sports pages 60% of the time and politics pages 40% of the time. Once we choose that a particular teleport step is to (say) a random sports page, we choose a web page in  uniformly at random to teleport to. This in turn leads to an ergodic Markov chain with a steady-state distribution that is personalized to this user's preferences over topics (see Exercise 21.2.3 ).\n\n\nWhile this idea has intuitive appeal, its implementation appears cumbersome: it seems to demand that for each user, we compute a transition probability matrix and compute its steady-state distribution. We are rescued by the fact that the evolution of the probability distribution over the states of a Markov chain can be viewed as a linear system. In Exercise 21.2.3  we will show that it is not necessary to compute a PageRank vector for every distinct combination of user interests over topics; the personalized PageRank vector for any user can be expressed as a linear combination of the underlying topic-specific PageRanks. For instance, the personalized PageRank vector for the user whose interests are 60% sports and 40% politics can be computed as\n\n\n\n\n\n\n(261)\n\n\nwhere  and  are the topic-specific PageRank vectors for sports and for politics, respectively.\n\n\nExercises.\n\nWrite down the transition probability matrix for\nthe example in Figure 21.2 .\n\n\n\nConsider a web graph with three nodes 1, 2 and 3. The links\nare as follows: \n. Write down the transition\nprobability matrices for the surfer's walk with teleporting,\nfor the following three values of the teleport probability:\n(a) ; (b)  and (c) .\n\n\n\nA user of a browser can, in addition to clicking a\nhyperlink on the page  he is currently browsing, use the\nback button to go back to the page from which he\narrived at . Can such a user of back buttons be modeled\nas a Markov chain?  How would we model repeated invocations\nof the back button?\n\n\n\nConsider a Markov chain with three states A, B and\nC, and transition probabilities as follows. From state A,\nthe next state is B with probability 1. From B, the next\nstate is either A with probability , or state C with\nprobability . From C the next state is A with\nprobability 1. For what values of  is this\nMarkov chain ergodic?\n\n\n\nShow that for any directed graph, the Markov chain\ninduced by a random walk with the teleport operation is\nergodic.\n\n\n\nShow that the PageRank of every page is at least\n. What does this imply about the difference in\nPageRank values (over the various pages) as  becomes\nclose to 1?\n\n\n\nFor the data in Example 21.2.2, write a\nsmall routine or use a scientific calculator to compute the\nPageRank values stated in Equation 260.\n\n\n\nSuppose that the web graph is stored on disk as an\nadjacency list, in such a way that you may only query for\nthe out-neighbors of pages in the order in which they are\nstored. You cannot load the graph in main memory but you may\ndo multiple reads over the full graph. Write the algorithm\nfor computing the PageRank in this setting.\n\n\n\nRecall the sets  and  introduced near the beginning of Section 21.2.3 .  How does the set  relate to ?\n\n\n\nIs the set  always the set of all web pages?\nWhy or why not?\n\n\n\n Is the sports PageRank of any page in  at least\nas large as its PageRank?\n\n\n\n Consider a\nsetting where we have two topic-specific PageRank values for\neach web page: a sports PageRank , and a\npolitics PageRank . Let  be the\n(common) teleportation probability used in computing both\nsets of topic-specific PageRanks. For , consider\na user whose interest profile is divided between a fraction\n in sports and a fraction  in politics. Show that\nthe user's personalized PageRank is the steady-state\ndistribution of a random walk in which - on a teleport step\n- the walk teleports to a sports page with probability \nand to a politics page with probability .\n\n\n\nShow that the Markov chain corresponding to the walk in\nExercise 21.2.3  is ergodic and hence the\nuser's personalized PageRank can be obtained by computing\nthe steady-state distribution of this Markov chain.\n\n\n\nShow that in the steady-state distribution of\nExercise 21.2.3, the steady-state\nprobability for any web page  equals\n\n.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Next: Hubs and Authorities\n Up: PageRank\n Previous: The PageRank computation\n    Contents \n    Index\n\n\n© 2008 Cambridge University PressThis is an automatically generated page. In case of formatting errors you may want to look at the PDF edition of the book.\n2009-04-07\n\n\n\n"
}