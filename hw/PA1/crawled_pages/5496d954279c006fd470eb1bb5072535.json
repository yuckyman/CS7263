{
  "url": "http://nlp.stanford.edu/IR-book/html/htmledition/text-centric-vs-data-centric-xml-retrieval-1.html",
  "title": "Text-centric vs. data-centric XML retrieval",
  "body": "\n\n\n\n\nText-centric vs. data-centric XML retrieval\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Next: References and further reading\n Up: XML retrieval\n Previous: Evaluation of XML retrieval\n    Contents \n    Index\n\n\n\n\n \n\nText-centric vs. data-centric XML retrieval\n  In the type of structured retrieval\nwe cover in this chapter, XML\nstructure serves as a framework within which we match the text\nof the query with the text of the\nXML documents.\nThis exemplifies a system that is optimized for \n text-centric XML . While both text and structure are\nimportant, we give higher priority to text. We do this by\nadapting unstructured retrieval methods to handling additional\nstructural constraints.\nThe premise of our approach is\nthat XML document retrieval is\ncharacterized by (i)\nlong text fields (e.g.,\nsections of a document), (ii) inexact matching,\nand (iii)\nrelevance-ranked\nresults. Relational databases do not deal well with this\n\nuse case.\n\n\nIn contrast,  data-centric XML  \nmainly encodes numerical and non-text attribute-value data. When\nquerying data-centric XML, we want to impose exact match\nconditions in most cases. This\nputs\nthe emphasis on the structural aspects of XML documents and queries. An\nexample is:\n\nFind employees whose salary is the same this month as it was\n12 months ago.\n\n\nThis query requires no ranking. It is\npurely structural and an exact matching of \nthe salaries in the two time periods\nis probably sufficient to meet the user's\ninformation need.\n\n\nText-centric approaches are appropriate for data that are\nessentially text documents, marked up as XML to capture\ndocument structure. This is becoming a de facto standard for\npublishing text databases since most text documents have\nsome form of interesting structure - paragraphs, sections,\nfootnotes etc. Examples include assembly manuals, issues of journals, Shakespeare's collected works and newswire articles.\n\n\nData-centric approaches are commonly used for\ndata collections with complex structures that mainly contain\nnon-text data. A text-centric retrieval\nengine will have a hard time with proteomic data\nin bioinformatics or with the representation of a\ncity map that (together with street names and other\ntextual descriptions) forms a navigational database.\n\n\nTwo other types of queries that are difficult to handle in a\ntext-centric structured retrieval model are joins and ordering constraints.\nThe query for employees with unchanged salary\nrequires a join.\nThe following query imposes an ordering constraint:\n\nRetrieve the chapter of the book Introduction to\nalgorithms that follows the chapter Binomial heaps.\n\n\nThis query relies on the ordering of elements in\nXML\n- in this case the ordering of chapter elements underneath\nthe book node.\nThere are powerful query languages for XML\nthat can handle numerical attributes, joins and ordering constraints.\nThe best known of these is  XQuery, a language proposed for\nstandardization by the W3C. It is designed to be\nbroadly applicable in all areas where XML is used.  Due to its complexity,\nit is challenging to implement an XQuery-based ranked\nretrieval system with the performance characteristics\nthat users have come to expect in information retrieval.\nThis is currently one of the most active areas of research\nin XML retrieval.\n\n\nRelational databases are better equipped to handle\nmany structural constraints, particularly joins (but\nordering is\nalso difficult in a\ndatabase framework - the tuples of a relation in the\nrelational calculus are not ordered). For this reason, most\ndata-centric XML retrieval systems are extensions of\nrelational databases (see the references in Section 10.6 ). If text fields are short, exact\nmatching meets user needs and retrieval results\nin form of unordered sets are acceptable, then using a relational\ndatabase for XML retrieval is appropriate.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Next: References and further reading\n Up: XML retrieval\n Previous: Evaluation of XML retrieval\n    Contents \n    Index\n\n\n© 2008 Cambridge University PressThis is an automatically generated page. In case of formatting errors you may want to look at the PDF edition of the book.\n2009-04-07\n\n\n\n"
}